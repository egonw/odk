package net.sf.cdk.tools;

import java.io.File;
import java.io.FileWriter;

import org.openscience.cdk.tools.periodictable.PeriodicTable;

public class CreateElements {

	private final static String TEMPLATE =
"// autogenerated\n" +
"package com.github.egonw.odk.elements;\n" +
"\n" +
"import com.github.egonw.odk.interfaces.IElement;\n" +
"\n" +
"public final class $ELEMENTCLASSNAME$ implements IElement {\n" +
"\n" +
"	private final static String SYMBOL = \"$SYMBOL$\";\n" + 
"	private static IElement instance;\n" +
"\n" +
"	private $ELEMENTCLASSNAME$() {};\n" +
"\n" +
"	public static IElement getInstance() {\n" +
"			$ELEMENTCLASSNAME$.instance = new $ELEMENTCLASSNAME$();\n" +
"		return $ELEMENTCLASSNAME$.instance;\n" +
"	}\n" +
"\n" +	
"	@Override\n" +
"	public String getSymbol() {\n" +
"		return SYMBOL;\n" +
"	}\n" +
"\n" +
"	@Override\n" +
"	public short getAtomicNumber() {\n" +
"		return $ATOMICNUMBER$;\n" +
"	}\n" +
"\n" +
"}\n";
	
	public static void main(String[] args) throws Exception {
		int count = PeriodicTable.getElementCount();
		for (int i=1; i<=count; i++) {
			String symbol = PeriodicTable.getSymbol(i);
			if (symbol != null) {
				String elementClassName = upperCase(PeriodicTable.getName(symbol));
				String fileContent = TEMPLATE;
				fileContent = fileContent.replace("$ELEMENTCLASSNAME$", elementClassName);
				fileContent = fileContent.replace(
					"$ATOMICNUMBER$", "" + PeriodicTable.getAtomicNumber(symbol)
				);
				fileContent = fileContent.replace("$SYMBOL$", symbol);
				FileWriter fileWriter = new FileWriter(
					new File(
						"src/main/com/github/egonw/odk/elements/" +
						elementClassName + 
						".java"
					)
				);
				fileWriter.append(fileContent);
				fileWriter.close();
			}
		}
		
	}

	private static String upperCase(String name) {
		String result = name.toLowerCase();
		return ("" + result.charAt(0)).toUpperCase() + result.substring(1);
	}

}
